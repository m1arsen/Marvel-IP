{"version":3,"file":"static/js/517.f97221b4.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from '../../resources/Avengers.png';\r\nimport avengersLogo from '../../resources/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]),\r\n          [offset, setOffset] = useState(1000),\r\n          [newItemLoading, setNewItemLoading] = useState(false),\r\n          [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if(newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList])\r\n        setNewItemLoading(newItemLoading => false)\r\n        setOffset(offset => offset + 8)\r\n        setComicsEnded(comicsEnded => ended)\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n        const items = arr.map((item) => {\r\n            return (\r\n                <CSSTransition key={item.id} timeout={300} classNames=\"comics__item\">\r\n                    <li\r\n                        className=\"comics__item\"\r\n                        key={item.id}>\r\n                        <Link to={`${item.id}`}>\r\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                            <div className=\"comics__item-name\">{item.title}</div>\r\n                            <div className=\"comics__item-price\">{item.price}</div>\r\n                        </Link>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n          });\r\n\r\n          return (\r\n            <TransitionGroup className=\"comics__grid\">\r\n                {items}\r\n            </TransitionGroup>\r\n          )\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return(\r\n    <>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","offset","setOffset","_useState5","_useState6","newItemLoading","setNewItemLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","errorMessage","ErrorMessage","spinner","Spinner","items","arr","map","item","CSSTransition","timeout","classNames","Link","to","id","thumbnail","title","price","TransitionGroup","renderItems","disabled","style","onClick","_Fragment","AppBanner","ComicsList"],"sourceRoot":""}