{"version":3,"file":"static/js/124.254edd07.chunk.js","mappings":"kOAyCMA,EAAO,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACNC,EAA8DD,EAA9DC,MAAOC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,UAAWC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,MACtDC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKT,EAAWU,IAAKb,EAAOS,UAAU,uBAC3CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAAEV,KACpCW,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAET,KACpCU,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAER,KACpCM,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sBAAqBC,SAAA,CAAC,aAAWN,MAC9CO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAEL,QAExCM,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAIT,GAAU,GAAIG,UAAU,qBAAoBC,SAAC,kBAK7D,EAEA,EAtDwB,WACtB,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCnB,EAAKqB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAAUC,EAAUL,EAAVK,YAElCC,EAAAA,EAAAA,YAAU,WACRC,GACF,GAAG,CAACd,IAEJ,IAAMc,EAAc,WAClBF,IACAD,EAASX,GAASe,KAAKC,EACzB,EAEMA,EAAgB,SAACjC,GACrBuB,EAASvB,EACX,EAEMkC,EAAeP,GAAQf,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,IAAM,KAC1CC,EAAUV,GAAUd,EAAAA,EAAAA,KAACyB,EAAAA,EAAO,IAAM,KAClCC,EAAYZ,GAAWQ,IAAiBlC,EAE1C,MADFY,EAAAA,EAAAA,KAACd,EAAI,CAACE,MAAOA,IAGf,OACES,EAAAA,EAAAA,MAAA8B,EAAAA,SAAA,CAAA5B,SAAA,CACGuB,EACAE,EACAE,IAGP,C","sources":["components/pages/singleComicPage/SingleComicPage.js"],"sourcesContent":["import { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../../services/MarvelService\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport ErrorMessage from \"../../errorMessage/ErrorMessage\";\r\nimport \"./singleComicPage.scss\";\r\n\r\nconst SingleComicPage = () => {\r\n  const { comicId } = useParams();\r\n  const [comic, setComic] = useState(null);\r\n  const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicId]);\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId).then(onComicLoaded);\r\n  };\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || errorMessage || !comic) ? (\r\n    <View comic={comic} />\r\n  ) : null;\r\n\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { title, description, pageCount, thumbnail, language, price } = comic;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">Language: {language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to={navigate(-1)} className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n"],"names":["View","_ref","comic","title","description","pageCount","thumbnail","language","price","navigate","useNavigate","_jsxs","className","children","_jsx","src","alt","Link","to","comicId","useParams","_useState","useState","_useState2","_slicedToArray","setComic","_useMarvelService","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content","_Fragment"],"sourceRoot":""}