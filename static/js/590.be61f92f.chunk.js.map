{"version":3,"file":"static/js/590.be61f92f.chunk.js","mappings":"2QAiBA,EAbkB,WACd,OACIA,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,cACxBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,0BACRC,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKC,IAAKG,EAAcD,IAAI,oBAGxC,C,oCCTA,IANqB,WACnB,OACEH,EAAAA,EAAAA,KAAA,MAAIK,MAAO,CAACC,UAAW,SAAUC,MAAO,QAAQR,SAAC,SAErD,C,+LCmFA,EA9EmB,WAEf,IAAAS,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAC,GAA1CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAAAI,GACJL,EAAAA,EAAAA,UAAS,KAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAC,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,GACoBT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAC,GAArDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,GACFb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAAuCC,EAAAA,EAAAA,KAAhCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,cAEvBC,EAAAA,EAAAA,YAAU,WACNC,EAAUhB,GAAQ,EACtB,GAAG,IAEH,IAAMgB,EAAY,SAAChB,EAAQiB,GACbZ,GAAVY,GACAH,EAAad,GACRkB,KAAKC,EACd,EAEMA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACTD,EAAcE,OAAS,IACtBD,GAAQ,GAGZxB,GAAc,SAAAD,GAAU,SAAA2B,QAAAC,EAAAA,EAAAA,GAAQ5B,IAAU4B,EAAAA,EAAAA,GAAKJ,GAAa,IAC5Df,GAAkB,SAAAD,GAAc,OAAI,CAAK,IACzCH,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BS,GAAe,SAAAD,GAAW,OAAIa,CAAK,GACvC,EA0BMI,EAAeZ,GAAQ7B,EAAAA,EAAAA,KAAC0C,EAAAA,EAAY,IAAK,KACzCC,EAAUf,IAAYR,GAAiBpB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,IAAK,KAEpDC,EA3Bc,SAACC,GACjB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,GACnB,OACIhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAAeC,QAAS,IAAKC,WAAW,eAAcpD,UAChEC,EAAAA,EAAAA,KAAA,MACIF,UAAU,eAAcC,UAExBF,EAAAA,EAAAA,MAACuD,EAAAA,GAAI,CAACC,GAAE,GAAAd,OAAKS,EAAKM,IAAKvD,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,IAAK+C,EAAKO,UAAWpD,IAAK6C,EAAKQ,MAAO1D,UAAU,sBACrDE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAEiD,EAAKQ,SACzCxD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,SAAEiD,EAAKS,YAJzCT,EAAKM,KAHEN,EAAKM,GAY/B,IAEA,OACEtD,EAAAA,EAAAA,KAAC0D,EAAAA,EAAe,CAAC5D,UAAU,eAAcC,SACpC8C,GAGb,CAKcc,CAAY/C,GAE1B,OACIf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,CAExB0C,EACAE,EACAE,GAED7C,EAAAA,EAAAA,KAAA,UACIF,UAAU,mCACV8D,SAAUxC,EACVf,MAAO,CAAC,QAAWmB,EAAc,OAAS,SAC1CqC,QAAS,kBAAM7B,EAAUhB,EAAO,EAACjB,UACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,kBAIvC,EChEA,EAhBmB,WACjB,OACEF,EAAAA,EAAAA,MAAAiE,EAAAA,SAAA,CAAA/D,SAAA,EACEF,EAAAA,EAAAA,MAACkE,EAAAA,EAAM,CAAAhE,SAAA,EACLC,EAAAA,EAAAA,KAAA,QACEgE,KAAK,cACLC,QAAQ,kCAEVjE,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACkE,EAAAA,EAAS,KACVlE,EAAAA,EAAAA,KAACmE,EAAU,MAGjB,C,mGCuDA,EAxEyB,WACvB,IAAAC,ECDqB,WACrB,IAAA5D,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAC,GAAvCoB,EAAOlB,EAAA,GAAE2D,EAAU3D,EAAA,GAAAI,GACAL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCe,EAAKd,EAAA,GAAEuD,EAAQvD,EAAA,GAEhBwD,GAAUC,EAAAA,EAAAA,aAAW,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEnB,OAFqBV,EAAMK,EAAA9C,OAAA,QAAAoD,IAAAN,EAAA,GAAAA,EAAA,GAAG,MAAOJ,EAAII,EAAA9C,OAAA,QAAAoD,IAAAN,EAAA,GAAAA,EAAA,GAAG,KAAMH,EAAOG,EAAA9C,OAAA,QAAAoD,IAAAN,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAgB,oBAE9Ff,GAAW,GAAMkB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGQE,MAAMb,EAAK,CAACC,OAAAA,EAAQC,KAAAA,EAAMC,QAAAA,IAAU,KAAD,EAA5C,IAARC,EAAQK,EAAAK,MAEDC,GAAG,CAADN,EAAAE,KAAA,eACP,IAAIK,MAAM,mBAADvD,OAAoBuC,EAAG,cAAAvC,OAAa2C,EAASa,SAAU,KAAD,UAAAR,EAAAE,KAAA,GAGpDP,EAASc,OAAO,KAAD,GAEhB,OAFZb,EAAII,EAAAK,KAEVvB,GAAW,GAAOkB,EAAAU,OAAA,SACXd,GAAI,QAGS,MAHTI,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAEXlB,GAAW,GACXC,EAASiB,EAAAW,GAAEC,SAASZ,EAAAW,GAAA,yBAAAX,EAAAa,OAAA,GAAAvB,EAAA,mBAIvB,gBAAAwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAjB,UAAA,EArB0B,GAqBxB,IAIH,MAAO,CAACzD,QAAAA,EAASC,MAAAA,EAAO0C,QAAAA,EAASgC,YAFd/B,EAAAA,EAAAA,cAAY,kBAAMF,EAAS,KAAK,GAAE,IAGvD,CD7BgDkC,GAAvC5E,EAAOwC,EAAPxC,QAASC,EAAKuC,EAALvC,MAAO0C,EAAOH,EAAPG,QAASgC,EAAUnC,EAAVmC,WAE1BE,EAAW,4CACXC,EAAO,UAAAnE,OAAaoE,oCAIpBC,EAAgB,eAAAnC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA7D,EAAA6F,EAAAzB,EAAAC,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA+B,OAAxBzE,EAAMoE,EAAA9C,OAAA,QAAAoD,IAAAN,EAAA,GAAAA,EAAA,GAHd,IAGgCG,EAAAE,KAAA,EACpClB,EAAQ,GAADhC,OAAIkE,EAAQ,8BAAAlE,OAA6BvB,EAAM,KAAAuB,OAAImE,IAAW,KAAD,EAA7E,OAAHG,EAAGtB,EAAAK,KAAAL,EAAAU,OAAA,SACFY,EAAI1B,KAAK2B,QAAQ/D,IAAIgE,IAAoB,wBAAAxB,EAAAa,OAAA,GAAAvB,EAAA,KACjD,kBAHqB,OAAAJ,EAAA6B,MAAA,KAAAjB,UAAA,KAKhB2B,EAAkB,eAAAC,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsC,EAAOlD,GAAI,IAAA6C,EAAA,OAAAlC,EAAAA,EAAAA,KAAAW,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACpBlB,EAAQ,GAADhC,OAAIkE,EAAQ,oBAAAlE,OAAmByB,EAAI,KAAAzB,OAAImE,IAAW,KAAD,EAAjE,OAAHG,EAAGM,EAAAvB,KAAAuB,EAAAlB,OAAA,SACFY,EAAI1B,KAAK2B,QAAQ/D,IAAIgE,IAAoB,wBAAAI,EAAAf,OAAA,GAAAc,EAAA,KAChD,gBAHwBb,GAAA,OAAAY,EAAAX,MAAA,KAAAjB,UAAA,KAKlB+B,EAAY,eAAAC,GAAA3C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0C,EAAOhE,GAAE,IAAAuD,EAAA,OAAAlC,EAAAA,EAAAA,KAAAW,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACVlB,EAAQ,GAADhC,OAAIkE,EAAQ,eAAAlE,OAAce,EAAE,KAAAf,OAAImE,IAAW,KAAD,EAA1D,OAAHG,EAAGU,EAAA3B,KAAA2B,EAAAtB,OAAA,SACFc,EAAoBF,EAAI1B,KAAK2B,QAAQ,KAAG,wBAAAS,EAAAnB,OAAA,GAAAkB,EAAA,KAChD,gBAHiBE,GAAA,OAAAH,EAAAf,MAAA,KAAAjB,UAAA,KAKZ0B,EAAsB,SAACU,GAS3B,MAAO,CACLnE,GAAImE,EAAKnE,GACTU,KAAMyD,EAAKzD,KACX0D,YAAY,GAADnF,OAAKkF,EAAKC,aAVEA,EAU4BD,EAAKC,YATrDA,EAAYpF,QAAU,MACvBoF,EAAcA,EAAYC,MAAM,EAAG,KAAO,OAErCD,GAMgE,sCACvEnE,UAAU,GAADhB,OAAKkF,EAAKlE,UAAUqE,KAAI,KAAArF,OAAIkF,EAAKlE,UAAUsE,WACpDC,SAAUL,EAAKM,KAAK,GAAGjD,IACvBkD,KAAMP,EAAKM,KAAK,GAAGjD,IACnBmD,OAAQR,EAAKQ,OAAOpF,MAAMP,OAAS,GAAKmF,EAAKQ,OAAOpF,MAAM8E,MAAM,EAAG,IAAMF,EAAKQ,OAAOpF,OAdvF,IAAyB6E,CAgB3B,EAEM5F,EAAY,eAAAoG,GAAAxD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAuD,IAAA,IAAAnH,EAAA6F,EAAAuB,EAAA/C,UAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,OAAiC,OAA1BzE,EAAMoH,EAAA9F,OAAA,QAAAoD,IAAA0C,EAAA,GAAAA,EAAA,GArCR,IAqC4BC,EAAA5C,KAAA,EAClClB,EAAQ,GAADhC,OAAIkE,EAAQ,0BAAAlE,OAAyBvB,EAAM,KAAAuB,OAAImE,IAAU,OAAzE,OAAHG,EAAGwB,EAAAzC,KAAAyC,EAAApC,OAAA,SACFY,EAAI1B,KAAK2B,QAAQ/D,IAAIuF,IAAgB,wBAAAD,EAAAjC,OAAA,GAAA+B,EAAA,KAC7C,kBAHiB,OAAAD,EAAA5B,MAAA,KAAAjB,UAAA,KAKZkD,EAAQ,eAAAC,GAAA9D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA6D,EAAOnF,GAAE,IAAAuD,EAAA,OAAAlC,EAAAA,EAAAA,KAAAW,MAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EACNlB,EAAQ,GAADhC,OAAIkE,EAAQ,WAAAlE,OAAUe,EAAE,KAAAf,OAAImE,IAAU,OAAtD,OAAHG,EAAG6B,EAAA9C,KAAA8C,EAAAzC,OAAA,SACFqC,EAAgBzB,EAAI1B,KAAK2B,QAAQ,KAAG,wBAAA4B,EAAAtC,OAAA,GAAAqC,EAAA,KAC5C,gBAHaE,GAAA,OAAAH,EAAAlC,MAAA,KAAAjB,UAAA,KAKRiD,EAAkB,SAACL,GAAY,IAADW,EAClC,MAAO,CACLtF,GAAI2E,EAAO3E,GACXE,MAAOyE,EAAOzE,MACdkE,YAAaO,EAAOP,aAAe,0BACnCnE,UAAU,GAADhB,OAAK0F,EAAO1E,UAAUqE,KAAI,KAAArF,OAAI0F,EAAO1E,UAAUsE,WACxDgB,UAAWZ,EAAOY,UAAS,GAAAtG,OACxB0F,EAAOY,UAAS,OACnB,2CACAC,UAA+B,QAArBF,EAAAX,EAAOc,YAAY,UAAE,IAAAH,OAAA,EAArBA,EAAuBE,WAAY,QAC7CrF,MAAOwE,EAAOe,OAAO,GAAGvF,MAAK,GAAAlB,OAC1B0F,EAAOe,OAAO,GAAGvF,MAAK,KACzB,gBAEJ,EAEA,MAAO,CAAC7B,QAAAA,EAASC,MAAAA,EAAO+E,iBAAAA,EAAkBI,mBAAAA,EAAoBI,aAAAA,EAActF,aAAAA,EAAcyG,SAAAA,EAAUhC,WAAAA,EACtG,C","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from '../../resources/Avengers.png';\r\nimport avengersLogo from '../../resources/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","const ErrorMessage = () => {\r\n  return(\r\n    <h2 style={{textAlign: 'center', color: '#fff'}}>Error</h2>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]),\r\n          [offset, setOffset] = useState(1000),\r\n          [newItemLoading, setNewItemLoading] = useState(false),\r\n          [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if(newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList])\r\n        setNewItemLoading(newItemLoading => false)\r\n        setOffset(offset => offset + 8)\r\n        setComicsEnded(comicsEnded => ended)\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n        const items = arr.map((item) => {\r\n            return (\r\n                <CSSTransition key={item.id} timeout={300} classNames=\"comics__item\">\r\n                    <li\r\n                        className=\"comics__item\"\r\n                        key={item.id}>\r\n                        <Link to={`${item.id}`}>\r\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                            <div className=\"comics__item-name\">{item.title}</div>\r\n                            <div className=\"comics__item-price\">{item.price}</div>\r\n                        </Link>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n          });\r\n\r\n          return (\r\n            <TransitionGroup className=\"comics__grid\">\r\n                {items}\r\n            </TransitionGroup>\r\n          )\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return(\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Page with list of our comics\"\r\n        />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, error, request, clearError} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = `apikey=${process.env.REACT_APP_API_KEY}`;\r\n  const _baseOffsetChar = 210;\r\n  const _baseOffsetComics = 1000;\r\n\r\n  const getAllCharacters = async (offset = _baseOffsetChar) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter)\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n\r\n    function editDescription(description){\r\n      if(description.length >= 200) {\r\n        description = description.slice(0, 197) + '...';\r\n      }\r\n      return description;\r\n    }\r\n\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: `${char.description ? editDescription(char.description) : \"This character has not description\"}`,\r\n      thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items.length > 10 ? char.comics.items.slice(0, 10) : char.comics.items\r\n    }\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffsetComics) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`)\r\n    return res.data.results.map(_transformComic)\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n    return _transformComic(res.data.results[0]);\r\n  }\r\n\r\n  const _transformComic = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n      pageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      price: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\"\r\n    }\r\n  }\r\n\r\n  return {loading, error, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false),\r\n        [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if(!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setLoading(false);\r\n      return data;\r\n    } catch(e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, error, request, clearError}\r\n}"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","style","textAlign","color","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","offset","setOffset","_useState5","_useState6","newItemLoading","setNewItemLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","errorMessage","ErrorMessage","spinner","Spinner","items","arr","map","item","CSSTransition","timeout","classNames","Link","to","id","thumbnail","title","price","TransitionGroup","renderItems","disabled","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","_useHttp","setLoading","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","process","getAllCharacters","res","results","_transformCharacter","getCharacterByName","_ref2","_callee2","_context2","getCharacter","_ref3","_callee3","_context3","_x2","char","description","slice","path","extension","homepage","urls","wiki","comics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","_comics$textObjects$","pageCount","language","textObjects","prices"],"sourceRoot":""}